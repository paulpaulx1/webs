"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrotliCompression = void 0;
var zlib_1 = __importDefault(require("zlib"));
var Compression_1 = require("./Compression");
var LogLevel_enum_1 = require("../logger/LogLevel.enum");
/**
 * Brotli compression
 */
var BrotliCompression = /** @class */ (function (_super) {
    __extends(BrotliCompression, _super);
    /**
     * Creates an instance of BrotliCompression
     */
    function BrotliCompression(options, logger) {
        var _this = _super.call(this, options, logger) || this;
        _this.compressionName = 'BROTLI';
        _this.ext = 'br';
        _this.availability();
        return _this;
    }
    /**
     * Returns brotli compression instance in closure.
     */
    BrotliCompression.prototype.getCompression = function () {
        var _this = this;
        return function () {
            return zlib_1.default.createBrotliCompress({
                params: _this.compressionOptions,
            });
        };
    };
    /**
     * Returns human-readable brotli compression options info.
     */
    BrotliCompression.prototype.readableOptions = function () {
        return _super.prototype.readableOptions.call(this, this.getBrotliOptionName.bind(this));
    };
    /**
     * Build brotli options object [compressionOptions].
     */
    BrotliCompression.prototype.selectCompression = function () {
        var options = {};
        if (this.options.brotliParamMode !== undefined) {
            switch (this.options.brotliParamMode) {
                case 'text':
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_TEXT;
                    break;
                case 'font':
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_FONT;
                    break;
                case 'default':
                default:
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_GENERIC;
                    break;
            }
        }
        if (this.options.brotliQuality !== undefined) {
            options[zlib_1.default.constants.BROTLI_PARAM_QUALITY] = this.options.brotliQuality;
        }
        if (this.options.brotliSizeHint !== undefined) {
            options[zlib_1.default.constants.BROTLI_PARAM_SIZE_HINT] = this.options.brotliSizeHint;
        }
        this.compressionOptions = options;
    };
    /**
     * Returns human-readable brotli option name.
     */
    BrotliCompression.prototype.getBrotliOptionName = function (index) {
        switch (parseInt(index)) {
            case zlib_1.default.constants.BROTLI_PARAM_MODE:
                return 'brotliParamMode';
            case zlib_1.default.constants.BROTLI_PARAM_QUALITY:
                return 'brotliQuality';
            case zlib_1.default.constants.BROTLI_PARAM_SIZE_HINT:
                return 'brotliSizeHint';
        }
    };
    /**
     * Check if brotli compression is exists on current Node.js version.
     */
    BrotliCompression.prototype.availability = function () {
        if (typeof zlib_1.default.createBrotliCompress !== 'function') {
            var message = "Can't use brotli compression, Node.js >= v11.7.0 required.";
            this.logger.log(message, LogLevel_enum_1.LogLevel.ERROR);
            throw new Error(message);
        }
    };
    return BrotliCompression;
}(Compression_1.Compression));
exports.BrotliCompression = BrotliCompression;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJvdGxpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXByZXNzaW9ucy9Ccm90bGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBRXhCLDZDQUE0QztBQUc1Qyx5REFBbUQ7QUFFbkQ7O0dBRUc7QUFDSDtJQUF1QyxxQ0FBMEI7SUFHL0Q7O09BRUc7SUFDSCwyQkFBWSxPQUF3QixFQUFFLE1BQWM7UUFBcEQsWUFDRSxrQkFBTSxPQUFPLEVBQUUsTUFBTSxDQUFDLFNBRXZCO1FBUlEscUJBQWUsR0FBRyxRQUFRLENBQUM7UUFDM0IsU0FBRyxHQUFHLElBQUksQ0FBQztRQU1sQixLQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7O0lBQ3RCLENBQUM7SUFFRDs7T0FFRztJQUNILDBDQUFjLEdBQWQ7UUFBQSxpQkFLQztRQUpDLE9BQU87WUFDTCxPQUFBLGNBQUksQ0FBQyxvQkFBb0IsQ0FBQztnQkFDeEIsTUFBTSxFQUFFLEtBQUksQ0FBQyxrQkFBa0I7YUFDaEMsQ0FBQztRQUZGLENBRUUsQ0FBQztJQUNQLENBQUM7SUFFRDs7T0FFRztJQUNILDJDQUFlLEdBQWY7UUFDRSxPQUFPLGlCQUFNLGVBQWUsWUFBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVEOztPQUVHO0lBQ08sNkNBQWlCLEdBQTNCO1FBQ0UsSUFBTSxPQUFPLEdBQWtCLEVBQUUsQ0FBQztRQUVsQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxLQUFLLFNBQVMsRUFBRTtZQUM5QyxRQUFRLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFO2dCQUNwQyxLQUFLLE1BQU07b0JBQ1QsT0FBTyxDQUFDLGNBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUM7d0JBQ3ZDLGNBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUM7b0JBQ2xDLE1BQU07Z0JBRVIsS0FBSyxNQUFNO29CQUNULE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDO3dCQUN2QyxjQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDO29CQUNsQyxNQUFNO2dCQUVSLEtBQUssU0FBUyxDQUFDO2dCQUNmO29CQUNFLE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDO3dCQUN2QyxjQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDO29CQUNyQyxNQUFNO2FBQ1Q7U0FDRjtRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEtBQUssU0FBUyxFQUFFO1lBQzVDLE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUM7U0FDM0U7UUFFRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxLQUFLLFNBQVMsRUFBRTtZQUM3QyxPQUFPLENBQ0wsY0FBSSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FDdEMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQztTQUNqQztRQUNELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLENBQUM7SUFDcEMsQ0FBQztJQUVEOztPQUVHO0lBQ08sK0NBQW1CLEdBQTdCLFVBQThCLEtBQWE7UUFDekMsUUFBUSxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDdkIsS0FBSyxjQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQjtnQkFDbkMsT0FBTyxpQkFBaUIsQ0FBQztZQUUzQixLQUFLLGNBQUksQ0FBQyxTQUFTLENBQUMsb0JBQW9CO2dCQUN0QyxPQUFPLGVBQWUsQ0FBQztZQUV6QixLQUFLLGNBQUksQ0FBQyxTQUFTLENBQUMsc0JBQXNCO2dCQUN4QyxPQUFPLGdCQUFnQixDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0ssd0NBQVksR0FBcEI7UUFDRSxJQUFJLE9BQU8sY0FBSSxDQUFDLG9CQUFvQixLQUFLLFVBQVUsRUFBRTtZQUNuRCxJQUFNLE9BQU8sR0FBRyw0REFBNEQsQ0FBQztZQUM3RSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsd0JBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6QyxNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQztJQUNILHdCQUFDO0FBQUQsQ0FBQyxBQTVGRCxDQUF1Qyx5QkFBVyxHQTRGakQ7QUE1RlksOENBQWlCIn0=